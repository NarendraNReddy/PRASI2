- name: configure backend
  hosts: backend
  become: yes 
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: db.daws78s-nnr.online


  # vars:
  #   mysql_root_password: ExpenseApp@1
  #   login_host: db.daws78s-nnr.online


  tasks:
  - name: disable node js
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable node js
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install node js
    ansible.builtin.dnf:
      name: nodejs
      state: latest
    loop:
    - nodejs 
    - mysql  
  # useradd expense

  - name: install pip for db 
    ansible.builtin.pip:
      name: 
      - PyMySQL
      - cryptography
      executable: pip3.9  

  - name: adding user
    ansible.builtin.user:
      name: expense

  #mkdir /app 
  - name: app dir
    ansible.builtin.file:
      path: /app
      state: directory   

  - name: download and unzip the backend 
    ansible.builtin.unarchive:
      src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /app
      remote_src: yes    

  - name: install npm
    ansible.builtin.command: npm install
    args:
      chdir: /app    

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: daemon reload
    ansible.builtin.systemd_service:
      daemon_reload: true    

  - name: start and enable backend
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes    
  # #mysql -h <MYSQL-SERVER-IPADDRESS> -uroot -pExpenseApp@1 < /app/schema/backend.sql
    community.mysql.mysql_info:
     login_user: root
     login_password: "{{mysql_root_password}}"
     login_host: "{{login_host}}"
     state: import
     target: /app/schema/backend.sql   
     name: all


      
